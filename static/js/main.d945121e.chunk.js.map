{"version":3,"sources":["services/timezones.js","components/Source.js","actions/index.js","reducers/meetings.js","store/configureStore.js","components/Date.js","components/HourAndMinute.js","components/MeetingTimeDisplay.js","services/utils.js","components/WorktimeAlert.js","components/WorktimeConfig.js","components/Meeting.js","components/MeetingList.js","components/AddMeeting.js","components/App.js","index.js"],"names":["timezones","axios","get","TimezoneService","getTimezones","value","valueInLowerCase","toLowerCase","Promise","resolve","reject","then","response","matchTimezones","data","filter","timezone","abbr","indexOf","name","PLACE","TIMEZONE","Source","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onSourceChange","bind","assertThisInitialized","onSourceSelect","onSourceBlur","state","suggestions","lastSource","edit","newPlaces","suggestionsWithoutPlaces","suggestion","type","limitedNewPlaces","slice","concat","toConsumableArray","setState","newTimezones","suggestionsWithoutTimezones","limitedNewTimezones","self","request","placeId","original","place_id","google","maps","places","PlacesService","document","createElement","getDetails","changeSource","formatted_address","description","TimezonesService","predictions","timezoneSuggestions","map","prediction","id","details","replaceTimezonesInSuggestions","window","AutocompleteService","getPlacePredictions","input","status","placeSuggestions","structured_formatting","secondary_text","main_text","types","replacePlacesInSuggestions","event","target","length","matchGoogleAutocompletePlaces","item","selectPlace","selectTimezone","alert","select","_this2","_this$props$data","placeholder","inputClassNames","push","ReturnBtn","Label","react_default","a","htmlFor","className","onClick","aria-hidden","Autocomplete_default","getItemValue","items","renderItem","isHighlighted","key","inputProps","join","onBlur","onFocus","onSourceFocus","renderMenu","style","children","wrapperProps","wrapperStyle","onChange","onSelect","_this3","hasDstOffset","dstOffset","renderAutocomplete","renderPlaceDisplay","Component","ADD_MEETING","CHANGE_SOURCE","CHANGE_TIME","CHANGE_HOUR_AND_MINUTE","CHANGE_WORKTIME","CHANGE_WEEKEND_WORKTIME","TIMEZONE_API_KEY","TIMEZONE_API_URL","meetingData","source","time","moment","utc","timezoneOutdated","localTime","startWorktime","endWorktime","workOnWeekend","isWorktime","initialMeetings","addMeeting","meetings","newMeeting","assign","anotherMeetingWithTime","find","meeting","clone","verifyWorktime","dayMinutes","minutes","hours","weekDay","weekday","updateMeetingLocalTime","add","rawOffset","createLogger","rootReducer","combineReducers","arguments","undefined","action","payload","utcTime","subtract","newTime","initialState","Date","updatingLocalTime","selectedDate","newDate","changeTime","nextProps","componentClassNames","react_datepicker_es","customInput","format","selected","toDate","HourAndMinute","e","inputTime","split","parseInt","diff","changeHourAndMinute","Math","abs","required","MeetingTimeDisplay","titleWorktime","title","padLeft","str","padLength","charToAdd","String","i","formatMinutesToHour","floor","hourMinutes","hoursFormatted","minutesFormatted","convertHHmmToMinutes","strSplitted","WorktimeAlert","_props$data","WorktimeConfig","onStartWorktimeChange","onEndWorktimeChange","onWeekendChange","changeWorktime","changeWeekendWorktime","checked","show","Meeting","editDate","editWorktime","components_Date","components_HourAndMinute","components_WorktimeAlert","components_WorktimeConfig","components_MeetingTimeDisplay","sourceClassNames","hasSource","flex","components_Source","renderTimeDisplay","MeetingList","components_Meeting","renderMeeting","connect","_ref","oldMeeting","url","geometry","location","lat","lng","unix","dispatch","AddMeeting","App","components_MeetingList","components_AddMeeting","href","store","createStore","compose","applyMiddleware","thunkMiddleware","f","ReactDOM","render","es","components_App","getElementById"],"mappings":"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","file":"static/js/main.d945121e.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst timezones = axios.get('/timezones_abbreviations.json');\nconst TimezoneService = {\n    getTimezones: (value) => {\n        const valueInLowerCase = value.toLowerCase();\n\n        return new Promise((resolve, reject) => {\n            timezones.then((response) => {\n                const matchTimezones = response.data.filter((timezone) => {\n                    if (timezone.abbr.toLowerCase().indexOf(valueInLowerCase) > -1) {\n                        return true;\n                    }\n\n                    if (timezone.name.toLowerCase().indexOf(valueInLowerCase) > -1) {\n                        return true;\n                    }\n\n                    return false;\n                });\n                resolve(matchTimezones);\n            });\n        })\n    }\n};\n\nexport default TimezoneService;","/* global google */\nimport React, { Component } from 'react';\nimport Autocomplete from 'react-autocomplete';\nimport TimezonesService from '../services/timezones';\n\nexport const PLACE = 'place';\nexport const TIMEZONE = 'timezone';\nconst AUTOCOMPLETE_LIMIT_SUGGESTION_PLACES = 5;\nconst AUTOCOMPLETE_LIMIT_SUGGESTION_TIMEZONES = 5;\nconst AUTOCOMPLETE_MIN_CHARS = 3;\n\nclass Source extends Component {\n    constructor(props) {\n        super(props);\n\n        this.onSourceChange = this.onSourceChange.bind(this);\n        this.onSourceSelect = this.onSourceSelect.bind(this);\n        this.onSourceBlur = this.onSourceBlur.bind(this);\n        this.state = {\n            value: '',\n            suggestions: [],\n            lastSource: null,\n            edit: true\n        };\n    }\n\n    replacePlacesInSuggestions(newPlaces) {\n        const suggestionsWithoutPlaces = this.state.suggestions.filter((suggestion) => {\n            return suggestion.type !== PLACE;\n        });\n\n        const limitedNewPlaces = newPlaces.slice(0, AUTOCOMPLETE_LIMIT_SUGGESTION_PLACES);\n        const suggestions = [...limitedNewPlaces, ...suggestionsWithoutPlaces];\n        this.setState({suggestions});\n    }\n\n    replaceTimezonesInSuggestions(newTimezones) {\n        const suggestionsWithoutTimezones = this.state.suggestions.filter((suggestion) => {\n            return suggestion.type !== TIMEZONE;\n        });\n\n        const limitedNewTimezones = newTimezones.slice(0, AUTOCOMPLETE_LIMIT_SUGGESTION_TIMEZONES);\n        const suggestions = [...suggestionsWithoutTimezones, ...limitedNewTimezones];\n        this.setState({suggestions});\n    }\n\n    selectPlace(suggestion) {\n        const self = this;\n        const request = {\n            placeId: suggestion.original.place_id\n        };\n\n        // Init Google Places Service (require a HTMLElement as parameter)\n        // Request the place details to get the lat and lng of a place\n        const service = new google.maps.places.PlacesService(document.createElement('div'));\n        service.getDetails(request, (response) => {\n            suggestion.original = response;\n            self.props.changeSource(self.props.data, suggestion);\n            self.setState({ \n                value: suggestion.original.formatted_address,\n                lastSource: suggestion,\n                edit: false\n            });\n        });\n    }\n\n    selectTimezone(suggestion) {\n        this.setState({ \n            value: suggestion.description,\n            lastSource: suggestion,\n            edit: false\n        });\n        this.props.changeSource(this.props.data, suggestion);\n    }\n\n    matchTimezones(value) {\n        const self = this;\n        TimezonesService.getTimezones(value)\n            .then((predictions) => {\n                const timezoneSuggestions = predictions.map((prediction) => {\n                    const suggestion = {\n                        id: prediction.abbr,\n                        original: prediction,\n                        description: `${prediction.name} - ${prediction.abbr}`,\n                        name: prediction.name,\n                        details: prediction.abbr,\n                        type: TIMEZONE\n                    };\n                    return suggestion;\n                });\n                self.replaceTimezonesInSuggestions(timezoneSuggestions);\n            });\n    }\n\n    matchGoogleAutocompletePlaces(value) {\n        if (!window.google) {\n            return false;\n        }\n\n        const self = this;\n        const GoogleAutocompleteService = new google.maps.places.AutocompleteService();\n        GoogleAutocompleteService.getPlacePredictions({ input: value }, (predictions, status) => {\n            if (!predictions) {\n                predictions = [];\n            }\n\n            const placeSuggestions = predictions.map((prediction) => {\n                var details = prediction.structured_formatting.secondary_text,\n                    description = prediction.structured_formatting.main_text;\n\n                if (prediction.structured_formatting.secondary_text) {\n                    description = `${description} - ${prediction.structured_formatting.secondary_text}`;\n                }\n                \n                if (!details && prediction.types.indexOf('country') > -1) {\n                    details = 'Country';\n                }\n\n                const suggestion = {\n                    id: prediction.id,\n                    original: prediction,\n                    description,\n                    name: prediction.structured_formatting.main_text,\n                    details,\n                    type: PLACE\n                };\n                return suggestion;\n            });\n            self.replacePlacesInSuggestions(placeSuggestions);\n        });\n    }\n\n    onSourceChange(event) {\n        const value = event.target.value;\n        this.setState({ value });\n\n        if (value.length < AUTOCOMPLETE_MIN_CHARS) {\n            this.setState({ suggestions: [] });\n            return;\n        }\n\n        this.matchGoogleAutocompletePlaces(value);\n        this.matchTimezones(value);\n    }\n\n    onSourceBlur() {\n        this.setState({ value: (this.state.lastSource ? this.state.lastSource.description : '') });\n    }\n\n    onSourceSelect(value, item) {\n        switch (item.type) {\n            case PLACE:\n                this.selectPlace(item);\n                break;\n            case TIMEZONE:\n                this.selectTimezone(item);\n                break;\n            default:\n                alert('Source unknown');\n        }\n    }\n\n    onSourceFocus(event) {\n        event.target.select();\n    }\n\n    renderAutocomplete() {\n        if (!this.state.edit) {\n            return null;\n        }\n\n        const { placeholder, id } = this.props.data;\n        const { lastSource } = this.state;\n        var inputClassNames = [\n            'source-control',\n            'form-control',\n            'form-control-lg'\n        ];\n\n        if (lastSource && \n            (lastSource.description === this.state.value)) {\n            inputClassNames.push('idle');\n        }\n\n        var ReturnBtn = null,\n            Label = null;\n\n        if (lastSource) {\n            Label = <label htmlFor={`source_${id}`}>{ placeholder }</label>;\n            ReturnBtn = (\n                <div className=\"actions-box\">\n                    <button className=\"btn btn-sm btn-success\" onClick={() => { this.setState({edit: false}); }}>\n                        <i className=\"fa fa-angle-left\" aria-hidden=\"true\"></i> Return\n                    </button>\n                </div>\n            );\n        }\n\n        return (\n            <div className=\"place-edit\">\n                { Label }\n                <Autocomplete\n                    getItemValue={(item) => item.id}\n                    items={this.state.suggestions}\n                    renderItem={(item, isHighlighted) =>\n                        <div className={ isHighlighted ? 'autocomplete-item highlighted' : 'autocomplete-item' }\n                            key={item.id}>\n                            {item.name}\n                            <div><small>{item.details}</small></div>\n                        </div>\n                    }\n                    inputProps={{\n                        id: `source_${id}`,\n                        className: inputClassNames.join(' '),\n                        placeholder,\n                        onBlur: this.onSourceBlur,\n                        onFocus: this.onSourceFocus\n                    }}\n                    renderMenu={(items, value, style) => {\n                        if (!items.length) {\n                            return <div children={items}/>;\n                        }\n\n                        return (<div className=\"autocomplete\" children={items}/>)\n                    }}\n                    wrapperProps={{\n                        className: 'autocomplete-wrap'\n                    }}\n                    wrapperStyle={{}}\n                    value={this.state.value}\n                    onChange={this.onSourceChange}\n                    onSelect={this.onSourceSelect}\n                    />\n                    { ReturnBtn }\n            </div>\n            );\n    }\n\n    renderPlaceDisplay() {\n        if (this.state.edit) {\n            return null;\n        }\n\n        const { lastSource } = this.state;\n        const hasDstOffset = lastSource && lastSource.timezone ? lastSource.timezone.dstOffset !== 0 : false;\n\n        return (\n            <div \n                className=\"place-display\" \n                onClick={() => { this.setState({edit: true}); }}>\n\n                <div className=\"name\">\n                    {lastSource.name} \n                </div>\n                <div className=\"details\">\n                    {lastSource.details}{ hasDstOffset ? ' (Summer Time)' : null } <i className=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i>\n                </div>\n            </div>\n        );\n    }\n\n    render() {\n        return (\n            <div className=\"Source\">\n                { this.renderAutocomplete() }\n                { this.renderPlaceDisplay() }\n            </div>\n        );\n    }\n}\n\nexport default Source;","import axios from 'axios';\nimport { PLACE, TIMEZONE } from '../components/Source';\n\nexport const ADD_MEETING = 'ADD_MEETING';\nexport const CHANGE_SOURCE = 'CHANGE_SOURCE';\nexport const CHANGE_TIME = 'CHANGE_TIME';\nexport const CHANGE_HOUR_AND_MINUTE = 'CHANGE_HOUR_AND_MINUTE';\nexport const CHANGE_WORKTIME = 'CHANGE_WORKTIME';\nexport const CHANGE_WEEKEND_WORKTIME = 'CHANGE_WEEKEND_WORKTIME';\n\nconst TIMEZONE_API_KEY = 'AIzaSyByEkLOsB5e9YhmsfO9sGkEmw5UcPyxMOQ';\nconst TIMEZONE_API_URL = 'https://maps.googleapis.com/maps/api/timezone/json';\n\nexport function addMeeting() {\n    return {\n        type: ADD_MEETING\n    };\n}\n\nexport function changeSource(oldMeeting, source) {\n    switch(source.type) {\n        case PLACE:\n            // It is required to get the timezone to calculate a local time of that place\n            const url = `${TIMEZONE_API_URL}?key=${TIMEZONE_API_KEY}&location=${source.original.geometry.location.lat()},${source.original.geometry.location.lng()}&timestamp=${oldMeeting.time.unix()}`;\n\n            return (dispatch) => {\n                axios.get(url)\n                    .then((response) => {\n                        source.timezone = response.data;\n\n                        dispatch({\n                            type: CHANGE_SOURCE,\n                            payload: { id: oldMeeting.id, source }\n                        });\n                    });\n            };\n        case TIMEZONE:\n            source.timezone = {\n                rawOffset: source.original.rawOffset,\n                dstOffset: source.original.dstOffset\n            };\n            return {\n                type: CHANGE_SOURCE,\n                payload: { id: oldMeeting.id, source }\n            };\n        default:\n            return {\n                type: CHANGE_SOURCE,\n                payload: { id: oldMeeting.id, source }\n            };\n    }\n}\n\nexport function changeTime(oldMeeting, time) {\n    var source = oldMeeting.source;\n\n    switch(source.type) {\n        case PLACE:\n        // It is required to get the timezone to calculate a local time of that place\n        const url = `${TIMEZONE_API_URL}?key=${TIMEZONE_API_KEY}&location=${source.original.geometry.location.lat()},${source.original.geometry.location.lng()}&timestamp=${time.unix()}`;\n\n        return (dispatch) => {\n            axios.get(url)\n                .then((response) => {\n                    source.timezone = response.data;\n\n                    dispatch({\n                        type: CHANGE_TIME,\n                        payload: { id: oldMeeting.id, source, time }\n                    });\n                });\n        };\n        default:\n            return {\n                type: CHANGE_TIME,\n                payload: { id: oldMeeting.id, source, time }\n            };\n    }\n}\n\nexport function changeHourAndMinute(type, minutes) {\n    return {\n        type: CHANGE_HOUR_AND_MINUTE,\n        payload: { type, minutes }\n    };\n}\n\nexport function changeWorktime(id, type, minutes) {\n    return {\n        type: CHANGE_WORKTIME,\n        payload: { id, type, minutes }\n    };\n}\n\nexport function changeWeekendWorktime(id, status) {\n    return {\n        type: CHANGE_WEEKEND_WORKTIME,\n        payload: { id, status }\n    }\n}","import { \n        ADD_MEETING, \n        CHANGE_SOURCE, \n        CHANGE_TIME,\n        CHANGE_HOUR_AND_MINUTE,\n        CHANGE_WORKTIME,\n        CHANGE_WEEKEND_WORKTIME\n    } from '../actions/index';\nimport moment from 'moment';\nimport { PLACE } from '../components/Source';\n\nconst initialTime = moment.utc();\nconst meetingData = {\n        source: null,\n        time: initialTime,\n        timezoneOutdated: false,\n        localTime: null,\n        startWorktime: 540,\n        endWorktime: 1080,\n        workOnWeekend: false,\n        isWorktime: null\n    };\n\nconst initialMeetings = [];\naddMeeting(initialMeetings);\naddMeeting(initialMeetings);\n\n/**\n * Add new meeting to a list\n * @param {array} meetings \n */\nfunction addMeeting(meetings) {\n    var newMeeting = Object.assign({}, meetingData);\n    newMeeting.id = meetings.length + 1;\n    newMeeting.placeholder = `Type a city or timezone ${newMeeting.id}`;\n\n    const anotherMeetingWithTime = meetings.find((meeting) => {\n        return meeting.localTime !== null;\n    });\n    if (anotherMeetingWithTime) {\n        newMeeting.time = anotherMeetingWithTime.time.clone();\n    }\n\n    meetings.push(newMeeting);\n}\n\n/**\n * Verify if localtime is on worktime\n * @param {object} meeting \n */\nfunction verifyWorktime(meeting) {\n    meeting.isWorktime = false;\n    const minutes = meeting.localTime.minutes();\n    const hoursMinutes = meeting.localTime.hours() * 60;\n    const dayMinutes = minutes + hoursMinutes;\n    const weekDay = meeting.localTime.weekday();\n\n    if ((!meeting.workOnWeekend && weekDay === 0) ||\n        (!meeting.workOnWeekend && weekDay === 6)) {\n        return;\n    }\n\n    if (dayMinutes >= meeting.startWorktime && \n        dayMinutes <= meeting.endWorktime) {\n        meeting.isWorktime = true;\n    }\n}\n\n/**\n * Update a meeting local time with timezone and dst offset\n * @param {object} meeting \n */\nfunction updateMeetingLocalTime(meeting) {\n    var localTime = meeting.time.clone();\n    localTime.add(meeting.source.timezone.rawOffset, 'seconds');\n    localTime.add(meeting.source.timezone.dstOffset, 'seconds');\n    meeting.localTime = localTime;\n\n    verifyWorktime(meeting);\n}\n\nexport default function(state = initialMeetings, action) {\n    var meetings;\n\n    switch(action.type) {\n        case ADD_MEETING:\n            meetings = state.slice();\n            addMeeting(meetings);\n            return meetings;\n        case CHANGE_SOURCE:\n            meetings = state.map((meeting) => {\n                if (meeting.id === action.payload.id) {\n                    meeting.source = action.payload.source;\n                    meeting.timezoneOutdated = false;\n                    updateMeetingLocalTime(meeting);\n                }\n                return meeting;\n            });\n\n            return meetings;\n        case CHANGE_TIME:\n            const utcTime = action.payload.time.clone();\n            utcTime.subtract(action.payload.source.timezone.rawOffset, 'seconds');\n            utcTime.subtract(action.payload.source.timezone.dstOffset, 'seconds');\n\n            meetings = state.map((meeting) => {\n                meeting.time = utcTime.clone();\n\n                // The meeting that change time do not need to update timezone\n                if (meeting.id === action.payload.id) {\n                    meeting.source = action.payload.source;\n                    updateMeetingLocalTime(meeting);\n                    return meeting;\n                }\n\n                if (meeting.source && meeting.source.type === PLACE) {\n                    meeting.timezoneOutdated = true;\n                }\n\n                if (meeting.source) {\n                    updateMeetingLocalTime(meeting);\n                }\n                return meeting;\n            });\n\n            return meetings;\n        case CHANGE_HOUR_AND_MINUTE:\n            meetings = state.map((meeting) => {\n                var newTime = meeting.time.clone();\n                newTime[action.payload.type](action.payload.minutes, 'minutes')\n                meeting.time = newTime;\n\n                if (meeting.localTime) {\n                    updateMeetingLocalTime(meeting);\n                }\n\n                return meeting;\n            });\n\n            return meetings;\n        case CHANGE_WORKTIME:\n            meetings = state.map((meeting) => {\n                if (meeting.id === action.payload.id) {\n                    meeting[action.payload.type] = action.payload.minutes;\n                    verifyWorktime(meeting);\n                }\n\n                return meeting;\n            });\n\n            return meetings;\n        case CHANGE_WEEKEND_WORKTIME:\n            meetings = state.map((meeting) => {\n                if (meeting.id === action.payload.id) {\n                    meeting.workOnWeekend = action.payload.status;\n                    verifyWorktime(meeting);\n                }\n\n                return meeting;\n            });\n\n            return meetings;\n        default:\n            return state;\n    }\n}","import { createStore, applyMiddleware, combineReducers, compose } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { createLogger } from \"redux-logger\";\nimport MeetingsReducer from \"../reducers/meetings\";\n\nconst logger = createLogger();\nconst rootReducer = combineReducers({\n  meetings: MeetingsReducer\n});\n\nconst initialState = {};\n\nexport default function configureStore() {\n  let store;\n\n  if (module.hot) {\n    store = createStore(\n      rootReducer,\n      initialState,\n      compose(\n        applyMiddleware(thunkMiddleware, logger),\n        window.devToolsExtension ? window.devToolsExtension() : f => f\n      )\n    );\n  } else {\n    store = createStore(\n      rootReducer,\n      initialState,\n      compose(applyMiddleware(thunkMiddleware), f => f)\n    );\n  }\n\n  return store;\n}\n","import React, { Component } from 'react';\nimport DatePicker from 'react-datepicker';\nimport moment from 'moment';\n\nimport 'react-datepicker/dist/react-datepicker.css';\n\nclass Date extends Component {\n    constructor(props) {\n        super(props);\n\n        this.onChange = this.onChange.bind(this);\n        this.state = {\n            time: null,\n            updatingLocalTime: false\n        };\n    }\n\n    onChange(selectedDate) {\n        var newDate = moment(selectedDate);\n        newDate.hours(this.state.time.hours()).minutes(this.state.time.minutes());\n        this.setState({ time: newDate });\n        this.props.changeTime(this.props.data, newDate);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.data.timezoneOutdated && \n            nextProps.data.source &&\n            !this.state.updatingLocalTime) {\n\n            this.setState({ updatingLocalTime: true });\n            nextProps.changeSource(nextProps.data, nextProps.data.source);\n            return;\n\n        }\n\n        this.setState({\n            time: this.props.data.localTime.clone(),\n            updatingLocalTime: false \n        });\n    }\n\n    componentWillMount() {\n        this.setState({ time: this.props.data.localTime.clone() });\n    }\n\n    render() {\n        const { localTime } = this.props.data;\n        const time = this.state.time;\n\n        if (!localTime) {\n            return null;\n        }\n\n        var componentClassNames = ['form-control', 'form-control-lg', 'Date'];\n        if (this.state.updatingLocalTime) {\n            componentClassNames.push('disabled');\n        }\n\n        return (\n            <div>\n                <label>Date</label>\n                <DatePicker\n                    customInput={\n                        <div>\n                            { time.format('ddd DD, MMM YYYY') }\n                        </div>\n                    }\n                    selected={this.state.time.toDate()}\n                    onChange={this.onChange}\n                    className={ componentClassNames.join(' ') }\n                    />\n            </div>\n        );\n    }\n}\n\nexport default Date;","import React, { Component } from 'react';\n\nclass HourAndMinute extends Component {\n    constructor(props) {\n        super(props);\n\n        this.onChange = this.onChange.bind(this);\n        this.state = {\n            time: null,\n            updatingLocalTime: false\n        };\n    }\n\n    onChange(e) {\n        const radix = 10;\n        const inputTime = e.target.value.split(':');\n        var newTime = this.state.time.clone();\n        newTime.hours(parseInt(inputTime[0], radix)).minutes(parseInt(inputTime[1], radix));\n\n        const diff = newTime.diff(this.state.time);\n        const type = diff < 0 ? 'subtract' : 'add';\n\n        if (diff !== 0) {\n            this.props.changeHourAndMinute(type, Math.abs(diff / 60 / 1000));\n        }\n    }\n\n    componentWillReceiveProps() {\n        this.setState({\n            time: this.props.data.localTime.clone(),\n            updatingLocalTime: false \n        });\n    }\n\n    componentWillMount() {\n        this.setState({\n            time: this.props.data.localTime.clone()\n        });\n    }\n\n    render() {\n        const { localTime } = this.props.data;\n        const time = this.state.time;\n\n        if (!localTime) {\n            return null;\n        }\n\n        var componentClassNames = ['form-control', 'form-control-lg', 'HourAndMinute'];\n        if (this.state.updatingLocalTime) {\n            componentClassNames.push('disabled');\n        }\n\n        return (\n            <div>\n                <label>Time</label>\n                <input \n                    type=\"time\" \n                    className={ componentClassNames.join(' ') } \n                    onChange={this.onChange} \n                    value={time.format('HH:mm')}\n                    required\n                    />\n            </div>\n        );\n    }\n}\n\nexport default HourAndMinute;","import React, { Component } from 'react';\n\nclass MeetingTimeDisplay extends Component {\n    render() {\n        var componentClassNames = ['MeetingTimeDisplay', 'col-12', 'col-md-6'],\n            titleWorktime = \"This time is out of worktime\";\n\n        if (this.props.meetingData.isWorktime) {\n            componentClassNames.push('worktime');\n            titleWorktime = \"This time is on worktime\";\n        }\n\n        return (\n            <div className={componentClassNames.join(' ')}>\n                <div className=\"time-box\" onClick={this.props.onClick}>\n                    <div className=\"hour-and-minute\" title={titleWorktime}>\n                        <span className=\"worktime-display\"></span>\n                        { this.props.meetingData.localTime.format('HH:mm') }\n                    </div>\n                    <div className=\"date\">\n                        <i className=\"fa fa-pencil-square-o d-none d-sm-inline-block\" aria-hidden=\"true\"></i> { this.props.meetingData.localTime.format('ddd DD, MMM YYYY') } <i className=\"fa fa-pencil-square-o d-sm-none\" aria-hidden=\"true\"></i>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default MeetingTimeDisplay;","/**\n * Create date intervals\n * @param {Moment} date\n * @return {array}\n */\nexport function createIntervals(date, increment = 30) {\n    var intervals = [],\n        intervalDate,\n        minutes = 0;\n\n    const baseDate = date.clone().startOf('date');\n    const minutesInDay = 1440;\n\n    while(minutes < minutesInDay) {\n        intervalDate = baseDate.clone().add(minutes, 'minutes');\n        intervals.push({\n            minutes,\n            formatted: intervalDate.format('HH:mm'),\n            date: intervalDate\n        });\n        minutes += increment;\n    }\n    return intervals;\n};\n\n/**\n* Pad a string with specified character\n* @param {string} str\n* @param {number} padLength\n* @param {string} charToAdd\n*/\nexport function padLeft(str, padLength, charToAdd = '0') {\n    if(typeof str !== 'string') {\n        str = String(str);\n    }\n\n    const len = str.length;\n\n    for(let i = len; i < padLength; i++) {\n        str = charToAdd + str;\n    }\n\n    return str;\n};\n\n/**\n * Format minutes to HH:mm\n * @param {number} minutes\n * @return {string}\n */\nexport function formatMinutesToHour(minutes) {\n    const hours = Math.floor(minutes / 60);\n    const hourMinutes = Math.floor(minutes % 60);\n    const hoursFormatted = padLeft(hours, 2);\n    const minutesFormatted = padLeft(hourMinutes, 2);\n\n    return (`${hoursFormatted}:${minutesFormatted}`);\n};\n\n/**\n * Conver HH:mm to minutes\n * @param {string} str | HH:mm\n * @return {number}\n */\nexport function convertHHmmToMinutes(str) {\n    const strSplitted = str.split(':');\n    const hours = parseInt(strSplitted[0], 10);\n    const minutes = parseInt(strSplitted[1], 10);\n\n    return (minutes + (hours * 60));\n};","import React from 'react';\nimport { formatMinutesToHour } from '../services/utils';\n\nconst WorktimeAlert = (props) => {\n    const { isWorktime, startWorktime, endWorktime } = props.data;\n\n    if (isWorktime) {\n        return null;\n    }\n\n    return (\n        <div className=\"alert alert-danger\">\n            { `This time is out of working time (${formatMinutesToHour(startWorktime)} ~ ${formatMinutesToHour(endWorktime)})` }\n        </div>\n    );\n}\n\nexport default WorktimeAlert;","import React, { Component } from 'react';\nimport { formatMinutesToHour, convertHHmmToMinutes } from '../services/utils';\n\nclass WorktimeConfig extends Component {\n    constructor(props) {\n        super(props);\n\n        this.onStartWorktimeChange = this.onStartWorktimeChange.bind(this);\n        this.onEndWorktimeChange = this.onEndWorktimeChange.bind(this);\n        this.onWeekendChange = this.onWeekendChange.bind(this);\n    }\n\n    onStartWorktimeChange(event) {\n        this.props.changeWorktime(this.props.data.id, 'startWorktime', convertHHmmToMinutes(event.target.value));\n    }\n\n    onEndWorktimeChange(event) {\n        this.props.changeWorktime(this.props.data.id, 'endWorktime', convertHHmmToMinutes(event.target.value));\n    }\n\n    onWeekendChange(event) {\n        this.props.changeWeekendWorktime(this.props.data.id, event.target.checked);\n    }\n\n    render() {\n        const { startWorktime, endWorktime, workOnWeekend } = this.props.data;\n        \n        if (!this.props.show) {\n            return null;\n        }\n    \n        return (\n            <div className=\"row WorktimeConfig\">\n                <div className=\"col-12 col-sm-6\">\n                    <label>Start Worktime</label>\n                    <input \n                        type=\"time\" \n                        className=\"form-control\"\n                        onChange={this.onStartWorktimeChange} \n                        value={formatMinutesToHour(startWorktime)}\n                        required\n                        />\n                </div>\n                <div className=\"col-12 col-sm-6\">\n                    <label>End Worktime</label>\n                    <input \n                        type=\"time\" \n                        className=\"form-control\"\n                        onChange={this.onEndWorktimeChange} \n                        value={formatMinutesToHour(endWorktime)}\n                        required\n                        />\n                </div>\n                <div className=\"col-12 weekend-config\">\n                    <div className=\"form-check\">\n                        <label className=\"form-check-label\" htmlFor=\"weekend_config_switch\">\n                        <input\n                            type=\"checkbox\"\n                            id=\"weekend_config_switch\"\n                            className=\"form-check-input\"\n                            onChange={this.onWeekendChange}\n                            checked={workOnWeekend}\n                            /> Work on weekend\n                        </label>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default WorktimeConfig;","import React, { Component } from 'react';\nimport Source from './Source';\nimport Date from './Date';\nimport HourAndMinute from './HourAndMinute';\nimport MeetingTimeDisplay from './MeetingTimeDisplay';\nimport WorktimeAlert from './WorktimeAlert';\nimport WorktimeConfig from './WorktimeConfig';\n\nclass Meeting extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            editDate: false,\n            editWorktime: false\n        };\n    }\n\n    renderTimeDisplay() {\n        if (!this.state.editDate) {\n            return <MeetingTimeDisplay \n                        meetingData={this.props.meetingData}\n                        onClick={() => { this.setState({editDate: true}); }} \n                        />;\n        }\n\n        return (\n            <div className=\"col-12 col-md-6 meeting-time-edit\">\n                <div className=\"row\">\n                    <div className=\"col-12 col-md-6\">\n                        <Date \n                            data={this.props.meetingData}\n                            changeTime={this.props.changeTime}\n                            changeSource={this.props.changeSource}\n                            />\n                    </div>\n                    <div className=\"col-12 col-md-6\">\n                        <HourAndMinute \n                            data={this.props.meetingData} \n                            changeHourAndMinute={this.props.changeHourAndMinute}\n                            />\n                    </div>\n                    <div className=\"col-12 worktime-box\">\n                        <WorktimeAlert data={this.props.meetingData}/>\n                        <WorktimeConfig \n                            data={this.props.meetingData} \n                            changeWeekendWorktime={this.props.changeWeekendWorktime} \n                            changeWorktime={this.props.changeWorktime} \n                            workOnWeekend={this.props.workOnWeekend}\n                            show={this.state.editWorktime}\n                            />\n                    </div>\n                    <div className=\"col-12 actions-box\">\n                        <button className=\"btn btn-sm btn-info\" onClick={() => { this.setState({editWorktime: !this.state.editWorktime}); }}>\n                            <i className=\"fa fa-cog\" aria-hidden=\"true\"></i> Change worktime\n                        </button>\n\n                        <button className=\"btn btn-sm btn-success\" onClick={() => { this.setState({editDate: false, editWorktime: false}); }}>\n                            <i className=\"fa fa-check\" aria-hidden=\"true\"></i> Apply\n                        </button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    render() {\n        var sourceClassNames = ['col-12'];\n        const hasSource = this.props.meetingData.source !== null;\n\n        if (hasSource) {\n            sourceClassNames.push('col-md-6');\n        }\n\n        return (\n            <div className=\"list-group-item Meeting\">\n                <div className=\"row\" style={{ flex: 1 }}>\n                    <div className={sourceClassNames.join(' ')}>\n                        <Source \n                            data={this.props.meetingData} \n                            changeSource={this.props.changeSource} \n                            />\n                    </div>\n                    \n                    { hasSource ? this.renderTimeDisplay() : null }\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Meeting;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Meeting from './Meeting';\nimport { changeSource, changeTime, changeHourAndMinute, changeWorktime, changeWeekendWorktime } from '../actions/index';\n\nclass MeetingList extends Component {\n    renderMeeting(meetingData) {\n        return <Meeting \n                    key={meetingData.id} \n                    meetingData={meetingData} \n                    changeSource={this.props.changeSource} \n                    changeTime={this.props.changeTime} \n                    changeHourAndMinute={this.props.changeHourAndMinute}\n                    changeWorktime={this.props.changeWorktime}\n                    changeWeekendWorktime={this.props.changeWeekendWorktime}\n                    />;\n    }\n\n    render() {\n        return (\n            <div className=\"meeting\">\n                <div className=\"list-group\">\n                    {this.props.meetings.map(this.renderMeeting.bind(this))}\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps({ meetings }) {\n    return { meetings };\n}\n\nexport default connect(mapStateToProps, \n    { \n        changeSource, \n        changeTime, \n        changeHourAndMinute, \n        changeWorktime,\n        changeWeekendWorktime\n    })(MeetingList);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { addMeeting } from '../actions/index';\n\nclass AddMeeting extends Component {\n  render() {\n    return (\n        <div className=\"add-meeting\">\n          <button className=\"btn btn-primary\" onClick={ this.props.addMeeting }><i className=\"fa fa-plus\" aria-hidden=\"true\"></i></button>\n        </div>\n    );\n  }\n}\n\nexport default connect(null, { addMeeting })(AddMeeting);\n","import React, { Component } from 'react';\n\n//Components\nimport MeetingList from './MeetingList';\nimport AddMeeting from './AddMeeting';\n\n// Styles\nimport '../Vendors.scss';\nimport '../App.scss';\n\nclass App extends Component {\n    render() {\n        return (\n            <div className=\"App\">\n                <div className=\"container\">\n                    <h1 className=\"app-title\">Find the best meeting time</h1>\n                    <MeetingList />\n                    <AddMeeting />\n\n                    <footer>\n                        Made by <a href=\"https://www.linkedin.com/in/aboutfelipelima/\">Felipe Lima</a> | <a href=\"https://github.com/fill-lima/meeting-time\">Github</a>\n                    </footer>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport configureStore from \"./store/configureStore\";\n\nimport App from './components/App';\n\nconst store = configureStore();\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// import registerServiceWorker from './registerServiceWorker';\n// registerServiceWorker();\n"],"sourceRoot":""}